__pycache__/
__pycache__/*

import pygame
pygame.init()

screen = pygame.display.set_mode(( 500, 500))
pygame.display.set_caption("Tetris")

black = (0, 0, 0)
red = (255, 0, 0)
green = (0, 255, 0)
blue = (0, 0, 255)
white = (255, 255, 255)






def Q():
    Q =  pygame.draw.rect(screen, red, (x,y,hight,width))
    x = 255
    y = 260
    vel = 5
    hight = 100
    width = 100

    pygame.display.update()

    pass

def I():
    I = pygame.draw.line(screen, white, (x1, y1), (xx1, yy1), (20))

    x1 = 255
    xx1 = 255
    y1 = 255
    yy1 = 345
    vel1 = 5
    hight1 = 100
    width    1 = 100

    pygame.display.update()

    pass


def L(self):
    L = pygame.draw.rect(screen, blue, (xxx2, yyy2, width21, hight21)) \
        and pygame.draw.line(screen, blue, (x2, y2), (xx2, yy2), (vel2))

    ## L
    # line
    x2 = 255
    xx2 = 255
    y2 = 255
    yy2 = 345
    vel2 = 20
    width2 = 100
    hight2 = 100
    # react
    xxx2 = 263
    width21 = 30
    yyy2 = 326
    hight21 = 20
    vel21 = 20

    pass

def Z():
    N = pygame.draw.line(screen, red, (x3, y3), (xx3,yy3), (vel3)) \
        and  pygame.draw.line(screen, red, (xxx3, yyy3), (xxxx3, yyyy3), (vel31))

    ##Z
    x3 = 255
    xx3 = 255
    y3 = 255
    yy3 = 320
    vel3 = 25
    hight3 = 100
    width3 = 100

    # line 2
    xxx3 = 235
    xxxx3 = 235
    yyy3 = 285
    yyyy3 = 220
    hight31 = 100
    width31 = 100
    vel31 = 25

    pass

def T():

    T = pygame.draw.line(screen, green, (x4, y4), (xx4, yy4), (vel4)) \
        and  pygame.draw.rect(screen, green, (xxx4, yyy3, xxxx4, yyyy4))

    ##T
    x4 = 235
    xx4 = 300
    y4 = 255
    yy4 = 255
    vel4 = 20
    hight4 = 100
    width4 = 100
    # rect
    xxx4 = 259
    yyy4 = 265
    xxxx4 = 20
    yyyy4 = 23
    vel41 = 20
    width41 = 20
    hight41 = 20

    pass


run = True
while run:
    pygame.time.delay(10)

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False

    keys = pygame.key.get_pressed()
    def position_Square():
        if keys[pygame.K_LEFT] and x > 0 or x1 > 0:
            x -= vel

        if keys[pygame.K_RIGHT] and x < 500 - width:
            x += vel

            # borderless
        if keys[pygame.K_UP] and y > 0:
            y -= vel

        if keys[pygame.K_DOWN] and y < 500 - hight:
            y += vel
            pass
    def postion_I():

        if keys[pygame.K_LEFT] and x1 > 10 and xx1 > 10:
            x1 -= vel1
            xx1 -= vel1

        if keys[pygame.K_RIGHT] and x1 < 589 - width1:
            x1 += vel
            xx1 += vel

            # borderless
        if keys[pygame.K_UP] and y1 > 0 and yy1 > 0:
            y1 -= vel1
            yy1 -= vel1

        if keys[pygame.K_DOWN] and y1 < 505 - hight1 and y1 < 510 - hight1:
            y1 += vel1
            yy1 += vel1
            pass


    def position_L():
        if keys[pygame.K_LEFT] and x2 > 15 and xx2 > 15 \
                and xxx2 > 11:
            x2 -= vel2
            xx2 -= vel2

            xxx2 -= vel21

        if keys[pygame.K_RIGHT] and x2 < 565 - width2 \
                and xxx2 < 475 - width21:
            x2 += vel2
            xx2 += vel2

            xxx2 += vel21

            # borderless
        if keys[pygame.K_UP] and y2 > 15 and yy2 > 15 \
                and yyy2 > 0:
            y2 -= vel2
            yy2 -= vel2

            yyy2 -= vel21

        if keys[pygame.K_DOWN] and y2 < 585 - hight2 and yy2 < 585 - hight2 \
                and yyy2 < 500 - hight21:
            y2 += vel2
            yy2 += vel2

            yyy2 += vel21
    def position_Z():

        if keys[pygame.K_LEFT] and x3 > 10 and xx3 > 10 \
                and xxx3 > 10 and xxxx3 > 10:
            x3 -= vel3
            xx3 -= vel3

            xxx3 -= vel31
            xxxx3 -= vel31

        if keys[pygame.K_RIGHT] and x3 < 565.5 - width3 \
                and xxx3 < 565.5 - width31:
            x3 += vel3
            xx3 += vel3

            xxx3 += vel31
            xxxx3 += vel31

            # borderless
        if keys[pygame.K_UP] and y3 > 15 and yy3 > 15 \
                and yyy3 > 15 and yyyy3 > 15:
            y3 -= vel3
            yy3 -= vel3

            yyy3 -= vel31
            yyyy3 -= vel31

        if keys[pygame.K_DOWN] and y3 < 585 - hight3 and yy3 < 585 - hight3 \
                and yyy3 < 585 - hight31 and yyyy3 < 585 - hight31:
            y3 += vel3
            yy3 += vel3

            yyy3 += vel31
            yyyy3 += vel31

        pass

    def position_T():
        print(f"K_RIGHT={pygame.K_RIGHT}, K_DOWN={pygame.K_DOWN}, K_UP={pygame.K_UP}")

        if keys[pygame.K_LEFT] and x4 > 15 and xx4 > 15 \
                and xxx4 > 11:
            x4 -= vel4
            xx4 -= vel4

            xxx4 -= vel41

        if keys[pygame.K_RIGHT] and x4 < 565 - width4 \
                and xxx4 < 475 - width41:
            x4 += vel4
            xx4 += vel4

            xxx4 += vel41

            # borderless
        if keys[pygame.K_UP] and y4 > 15 and yy4 > 15 \
                and yyy4 > 35:
            y4 -= vel4
            yy4 -= vel4

            yyy4 -= vel41

        if keys[pygame.K_DOWN] and y4 < 600 - hight4 and yy4 < 500 - hight4 \
                and yyy4 < 600 - hight41:
            y4 += vel4
            yy4 += vel4

            yyy4 += vel41
        pass


    screen.fill((0, 0, 0))









    pygame.display.update()


pygame.quit()

*.pyc
